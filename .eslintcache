[{"C:\\Users\\User\\Desktop\\laho88\\src\\reportWebVitals.js":"1","C:\\Users\\User\\Desktop\\laho88\\src\\App.js":"2","C:\\Users\\User\\Desktop\\laho88\\src\\components\\Nav.js":"3","C:\\Users\\User\\Desktop\\laho88\\src\\components\\CreateModal.js":"4","C:\\Users\\User\\Desktop\\laho88\\src\\components\\UpdateModal.js":"5"},{"size":362,"mtime":1609649598607,"results":"6","hashOfConfig":"7"},{"size":2506,"mtime":1611206495983,"results":"8","hashOfConfig":"7"},{"size":1512,"mtime":1611201937239,"results":"9","hashOfConfig":"7"},{"size":2840,"mtime":1611204571429,"results":"10","hashOfConfig":"7"},{"size":2953,"mtime":1611206191374,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lfdclo",{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\laho88\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\laho88\\src\\App.js",["23","24","25"],"C:\\Users\\User\\Desktop\\laho88\\src\\components\\Nav.js",["26","27"],"C:\\Users\\User\\Desktop\\laho88\\src\\components\\CreateModal.js",["28"],"import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Checkbox, FormControlLabel, TextField, Typography } from '@material-ui/core';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function CreateModal({ createFunction }) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [task, setTask] = useState('')\r\n    const [gilad, setGilad] = useState(false)\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setGilad(!gilad)\r\n    }\r\n    const callCreate = () => {\r\n        handleClose()\r\n        createFunction({ task: task, completed: gilad,id:Date.now() })\r\n        setTask('')\r\n        setGilad(false)\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Create New Task</Button>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">Create  New Task</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography className=\"mb-4\">Allow the user to toggle a task's completion property by clicking the checkbox next to it.</Typography>\r\n                    <TextField onChange={e => setTask(e.target.value)} required id=\"standard-required\" label=\"Required\" placeholder=\"Enter  Text\" />\r\n                    <FormGroup>\r\n                        <FormControlLabel\r\n                            label=\"Get Python black  belt\"\r\n                            control={<Checkbox checked={gilad} onChange={handleChange} name=\"gilad\" />}\r\n                        />\r\n                    </FormGroup>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} variant=\"contained\" color=\"primary\">Cancel</Button>\r\n                    <Button onClick={callCreate} variant=\"contained\" color=\"secondary\" >Create</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\User\\Desktop\\laho88\\src\\components\\UpdateModal.js",["29","30"],{"ruleId":"31","severity":1,"message":"32","line":1,"column":74,"nodeType":"33","messageId":"34","endLine":1,"endColumn":84},{"ruleId":"31","severity":1,"message":"35","line":7,"column":10,"nodeType":"33","messageId":"34","endLine":7,"endColumn":26},{"ruleId":"31","severity":1,"message":"36","line":7,"column":28,"nodeType":"33","messageId":"34","endLine":7,"endColumn":47},{"ruleId":"31","severity":1,"message":"37","line":6,"column":8,"nodeType":"33","messageId":"34","endLine":6,"endColumn":14},{"ruleId":"31","severity":1,"message":"38","line":8,"column":8,"nodeType":"33","messageId":"34","endLine":8,"endColumn":16},{"ruleId":"31","severity":1,"message":"39","line":6,"column":8,"nodeType":"33","messageId":"34","endLine":6,"endColumn":25},{"ruleId":"31","severity":1,"message":"39","line":6,"column":8,"nodeType":"33","messageId":"34","endLine":6,"endColumn":25},{"ruleId":"40","severity":1,"message":"41","line":27,"column":7,"nodeType":"42","endLine":27,"endColumn":9,"suggestions":"43"},"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'activeUpdateForm' is assigned a value but never used.","'setActiveUpdateForm' is assigned a value but never used.","'Button' is defined but never used.","'MenuIcon' is defined but never used.","'DialogContentText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'el.completed' and 'el.task'. Either include them or remove the dependency array. If 'setTask' needs the current value of 'el.task', you can also switch to useReducer instead of useState and read 'el.task' in the reducer.","ArrayExpression",["44"],{"desc":"45","fix":"46"},"Update the dependencies array to be: [el.completed, el.task]",{"range":"47","text":"48"},[1090,1092],"[el.completed, el.task]"]